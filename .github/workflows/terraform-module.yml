name: Terraform Module

on:
  workflow_call:
    inputs:
      working_directory:
        description: Path to the Terraform module root.
        required: true
        type: string
      environment:
        description: Environment name used for backend/vars, approvals and role resolution.
        required: true
        type: string
  workflow_dispatch:
    inputs:
      working_directory:
        description: Path to the Terraform module root.
        required: true
        default: "."
      environment:
        description: Environment name (drives backend/vars/plan/approval/role)
        required: true
        default: "prod"

permissions:
  contents: read
  id-token: write
  pull-requests: write

concurrency:
  group: terraform-${{ inputs.working_directory }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  plan:
    name: Plan
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      TF_VERSION: '1.8.5'
      AWS_REGION: eu-west-1
      TF_ENVIRONMENT: ${{ inputs.environment }}
      TF_DIR: ${{ inputs.working_directory }}
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    outputs:
      changed: ${{ steps.plan.outputs.plan_status == 'changes' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Summarise inputs
        uses: ./.github/actions/print-run-context
        with:
          title: Terraform Module Workflow Context
          environment: ${{ inputs.environment }}
          aws_account_id: ${{ vars.AWS_ACCOUNT_ID }}
          aws_role_arn: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/ims-terraform-infrastructure-role-${{ inputs.environment }}
          working_directory: ${{ inputs.working_directory }}
          backend_config_file: computed (ims-terraform-infrastructure-state-<env>, ims-<repo>-<env>.tfstate)
          var_file: env/${{ inputs.environment }}/${{ inputs.environment }}.tfvars
          plan_file: plan-${{ inputs.environment }}.tfplan
          terraform_version: 1.8.5
          notes: "Reusable Terraform Module Workflow"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/ims-terraform-infrastructure-role-${{ inputs.environment }}
          aws-region: eu-west-1
          role-session-name: github-actions

      - name: Terraform setup
        uses: ./.github/actions/terraform-setup
        with:
          environment: ${{ inputs.environment }}

      - name: Terraform plan
        id: plan
        uses: ./.github/actions/terraform-plan
        with:
          working_directory: ${{ inputs.working_directory }}
          environment: ${{ inputs.environment }}

      # PR comment step removed per request

  plan-approval:
    name: Plan Approval Gate
    if: ${{ github.ref == 'refs/heads/main' && needs.plan.outputs.changed == 'true' }}
    runs-on: ubuntu-latest
    needs: [plan]
    environment: ${{ inputs.environment }}
    steps:
      - name: Await environment approval
        run: echo "Environment approval granted for plan in ${{ inputs.environment }}"

  apply:
    name: Apply
    if: ${{ github.ref == 'refs/heads/main' && needs.plan.outputs.changed == 'true' }}
    runs-on: ubuntu-latest
    needs: [plan, plan-approval]
    environment: ${{ inputs.environment }}
    env:
      TF_VERSION: '1.8.5'
      AWS_REGION: eu-west-1
      TF_ENVIRONMENT: ${{ inputs.environment }}
      TF_DIR: ${{ inputs.working_directory }}
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/ims-terraform-infrastructure-role-${{ inputs.environment }}
          aws-region: eu-west-1
          role-session-name: github-actions

      - name: Terraform setup
        uses: ./.github/actions/terraform-setup
        with:
          environment: ${{ inputs.environment }}

      - name: Terraform apply
        uses: ./.github/actions/terraform-apply
        with:
          working_directory: ${{ inputs.working_directory }}
          environment: ${{ inputs.environment }}
