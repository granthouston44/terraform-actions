name: Terraform Apply
description: Download plan artifact, compute backend path from environment, and run terraform apply. Assumes AWS credentials configured by the caller.
author: Tesco Terraform Tooling Team
inputs:
  working_directory:
    description: Directory containing Terraform configuration.
    required: false
    default: "."
  environment:
    description: Environment name (sandbox/dev/prod) used to derive backend path and role
    required: true
  backend_config_file:
    description: Optional path to a .tfbackend file. If provided, this takes precedence over computed config.
    required: false
    default: ""
runs:
  using: composite
  steps:
    - name: Download plan artifact
      uses: actions/download-artifact@v4
      with:
        name: tfplan
        path: ${{ inputs.working_directory }}

    - name: Terraform apply
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        set -euo pipefail
        ENV_NAME="${{ inputs.environment }}"
        PLAN_FILE="plan-${ENV_NAME}.tfplan"
        if [ -n "${{ inputs.backend_config_file }}" ]; then
          terraform init -input=false -reconfigure -backend-config="${{ inputs.backend_config_file }}"
        elif [ -f "env/${ENV_NAME}/${ENV_NAME}.tfbackend" ]; then
          terraform init -input=false -reconfigure -backend-config="env/${ENV_NAME}/${ENV_NAME}.tfbackend"
        else
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          KEY="ims-${REPO_NAME}-${ENV_NAME}.tfstate"
          BUCKET="ims-terraform-infrastructure-state-${ENV_NAME}"
          TABLE="ims-terraform-infrastructure-state-lock-${ENV_NAME}"
          REGION="eu-west-1"
          terraform init -input=false -reconfigure \
            -backend-config="bucket=${BUCKET}" \
            -backend-config="key=${KEY}" \
            -backend-config="region=${REGION}" \
            -backend-config="dynamodb_table=${TABLE}" \
            -backend-config="encrypt=true"
        fi
        APPLY_ARGS=("-input=false" "$PLAN_FILE")
        echo "Running: terraform apply ${APPLY_ARGS[*]}"
        terraform apply "${APPLY_ARGS[@]}"
